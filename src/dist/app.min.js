"use strict";var express=require("express"),connectDB=require("./config/database"),app=express(),User=require("./models/user"),_require=require("./utils/validation"),validationDatabase=_require.validationDatabase,bcrypt=require("bcrypt"),cookieParser=require("cookie-parser"),jwt=require("jsonwebtoken"),_require2=require("./middlewares/auth"),userAuth=_require2.userAuth;app.use(express.json()),app.use(cookieParser()),app.post("/signup",function(r,n){var t,a,s,i,o,u,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return validationDatabase(r),t=r.body,a=t.firstName,s=t.lastName,i=t.emailId,o=t.password,e.next=4,regeneratorRuntime.awrap(User.findOne({emailId:i}));case 4:if(e.sent)return e.abrupt("return",n.status(400).send("Email already exists"));e.next=7;break;case 7:return e.next=9,regeneratorRuntime.awrap(bcrypt.hash(o,10));case 9:return u=e.sent,console.log(u),c=new User({firstName:a,lastName:s,password:u,emailId:i}),e.prev=12,e.next=15,regeneratorRuntime.awrap(c.save());case 15:runValidators=!0,n.send("User Added successfully!"),e.next=24;break;case 19:if(e.prev=19,e.t0=e.catch(12),11e3===e.t0.code)return e.abrupt("return",n.status(400).send("Email already exists"));e.next=23;break;case 23:n.status(400).send("Error saving user: "+e.t0.message);case 24:case"end":return e.stop()}},null,null,[[12,19]])}),app.post("/login",function(r,n){var t,a,s,i,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body,a=t.emailId,s=t.password,e.prev=1,e.next=4,regeneratorRuntime.awrap(User.findOne({emailId:a}));case 4:if(i=e.sent){e.next=7;break}throw new Error("Invalid Credentials");case 7:return e.next=9,regeneratorRuntime.awrap(i.validatePassword(s));case 9:if(e.sent)return e.next=13,regeneratorRuntime.awrap(i.getJWT());e.next=18;break;case 13:o=e.sent,n.cookie("token",o,{expires:new Date(Date.now()+288e5)}),n.send("Login Successfull.."),e.next=19;break;case 18:throw new error("Invalid Credentials");case 19:e.next=24;break;case 21:e.prev=21,e.t0=e.catch(1),n.status(400).send("invalid Credentials "+e.t0.message);case 24:case"end":return e.stop()}},null,null,[[1,21]])}),app.get("/profile",userAuth,function(r,n){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:try{t=r.user,n.send(t)}catch(e){n.status(400).send("Something went wrong ")}case 1:case"end":return e.stop()}})}),app.post("/sendConnectionRequest",userAuth,function(r,n){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:r.user,n.send("connection Request Sent!");case 2:case"end":return e.stop()}})}),connectDB().then(function(){console.log("Database connection established..."),app.listen(7777,function(){console.log("Server is successfully listening on port 7777...")})}).catch(function(e){console.error("Database cannot be connected!!")});
//# sourceMappingURL=app.min.js.map
