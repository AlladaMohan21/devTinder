"use strict";var express=require("express"),connectDB=require("./config/database"),app=express(),User=require("./models/user"),_require=require("./utils/validation"),validationDatabase=_require.validationDatabase,bcrypt=require("bcrypt"),cookieParser=require("cookie-parser"),jwt=require("jsonwebtoken");app.use(express.json()),app.use(cookieParser()),app.post("/signup",function(r,n){var t,s,a,o,c,i,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return validationDatabase(r),t=r.body,s=t.firstName,a=t.lastName,o=t.emailId,c=t.password,e.next=4,regeneratorRuntime.awrap(User.findOne({emailId:o}));case 4:if(e.sent)return e.abrupt("return",n.status(400).send("Email already exists"));e.next=7;break;case 7:return e.next=9,regeneratorRuntime.awrap(bcrypt.hash(c,10));case 9:return i=e.sent,console.log(i),u=new User({firstName:s,lastName:a,password:i,emailId:o}),e.prev=12,e.next=15,regeneratorRuntime.awrap(u.save());case 15:runValidators=!0,n.send("User Added successfully!"),e.next=24;break;case 19:if(e.prev=19,e.t0=e.catch(12),11e3===e.t0.code)return e.abrupt("return",n.status(400).send("Email already exists"));e.next=23;break;case 23:n.status(400).send("Error saving user: "+e.t0.message);case 24:case"end":return e.stop()}},null,null,[[12,19]])}),app.post("/login",function(r,n){var t,s,a,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body,s=t.emailId,a=t.password,e.prev=1,e.next=4,regeneratorRuntime.awrap(User.findOne({emailId:s}));case 4:if(o=e.sent){e.next=7;break}throw new Error("Invalid Credentials");case 7:return e.next=9,regeneratorRuntime.awrap(bcrypt.compare(a,o.password));case 9:if(e.sent)return e.next=13,regeneratorRuntime.awrap(jwt.sign({_id:o._id},"DEV@Tinder$123"));e.next=18;break;case 13:c=e.sent,n.cookie("token",c),n.send("Login Successfull.."),e.next=19;break;case 18:throw new error("Invalid Credentials");case 19:e.next=24;break;case 21:e.prev=21,e.t0=e.catch(1),n.status(400).send("invalid Credentials "+e.t0.message);case 24:case"end":return e.stop()}},null,null,[[1,21]])}),app.get("/profile",function(r,n){var t,s,a,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(t=r.cookies,s=t.token){e.next=4;break}throw new Error("Invalid TOken");case 4:return e.prev=4,e.next=7,regeneratorRuntime.awrap(jwt.verify(s,"DEV@Tinder$123"));case 7:return a=e.sent,o=a._id,console.log("Logged In user is"+o),e.next=12,regeneratorRuntime.awrap(User.findById(o));case 12:if(c=e.sent){e.next=15;break}throw new Error("User Does Not Exists");case 15:n.send(c),e.next=21;break;case 18:e.prev=18,e.t0=e.catch(4),n.status(400).send("Something went wrong ");case 21:case"end":return e.stop()}},null,null,[[4,18]])}),app.get("/user",function(r,n){var t,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body.emailId,e.prev=1,console.log(t),e.next=5,regeneratorRuntime.awrap(User.findOne({emailId:t}));case 5:(s=e.sent)?n.send(s):n.status(404).send("User not found"),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(1),n.status(400).send("Something went wrong ");case 12:case"end":return e.stop()}},null,null,[[1,9]])}),app.get("/feed",function(e,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.find({}));case 3:n=e.sent,r.send(n),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),r.status(400).send("Something went wrong ");case 10:case"end":return e.stop()}},null,null,[[0,7]])}),app.delete("/user",function(r,n){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body.userId,e.prev=1,e.next=4,regeneratorRuntime.awrap(User.findByIdAndDelete({_id:t}));case 4:e.sent,n.send("User deleted successfully"),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),n.status(400).send("Something went wrong ");case 11:case"end":return e.stop()}},null,null,[[1,8]])}),app.patch("/user/:userId",function(r,n){var t,s,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(t=r.params.userId,s=r.body,e.prev=2,a=["photoUrl","about","gender","skills"],Object.keys(s).every(function(e){return a.includes(e)})){e.next=7;break}throw new Error("Updates not allowed");case 7:if(10<s.skills.length)throw new Error("skills cannot be more than 10");e.next=9;break;case 9:return e.next=11,regeneratorRuntime.awrap(User.findByIdAndUpdate({_id:t},s,{returnDocument:"after",runValidators:!0}));case 11:o=e.sent,console.log(o),n.send("User updated successfully"),e.next=19;break;case 16:e.prev=16,e.t0=e.catch(2),n.status(400).send("UPDATE FAILED:"+e.t0.message);case 19:case"end":return e.stop()}},null,null,[[2,16]])}),connectDB().then(function(){console.log("Database connection established..."),app.listen(7777,function(){console.log("Server is successfully listening on port 7777...")})}).catch(function(e){console.error("Database cannot be connected!!")});
//# sourceMappingURL=app.min.js.map
