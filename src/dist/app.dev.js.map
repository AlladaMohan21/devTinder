{"version":3,"sources":["app.js"],"names":["express","require","connectDb","User","app","use","json","get","req","res","userEmail","body","emailId","find","user","length","status","send","users","userdata","userId","findById","findByIdAndDelete","patch","data","findByIdAndUpdate","returnDocument","post","save","message","then","console","log","listen","err","error"],"mappings":"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","sourcesContent":["const express = require(\"express\");\r\nconst {connectDb}=require(\"./config/database\")\r\nconst User=require(\"./models/user\")\r\n\r\nconst app = express();\r\napp.use(express.json());\r\n\r\napp.get(\"/user\",async (req,res)=>{\r\n    try{\r\nconst userEmail=req.body.emailId;\r\n    const user= await User.find({emailId:userEmail});\r\n    if(user.length===0){\r\n        res.status(400).send(\"user data not found\");\r\n    }else{\r\n    res.send(user);\r\n    }\r\n    }catch(err){\r\n        res.status(400).send(\"user data not found\");\r\n    }\r\n    \r\n\r\n})\r\n\r\napp.get(\"/feed\",async (req,res)=>{\r\n    try{\r\n const users=req.body;\r\n    const userdata=await User.find({});\r\n    res.send(userdata);\r\n    }catch(err){\r\n        res.status(400).send(\"No users left\");\r\n    }\r\n   \r\n\r\n})\r\n\r\napp.get(\"/id\",async (req,res)=>{\r\n    try{\r\n        const userId = req.body.userId;\r\n        const users=await User.findById(userId);\r\n        res.send(users);\r\n    }catch(err){\r\n        res.status(400).send(\"user data not found\");\r\n    }\r\n})\r\n\r\napp.delete(\"/user\",async (req,res)=>{\r\n    try{\r\n        const user=req.body.userId;\r\n        const users=await User.findByIdAndDelete(user);\r\n        res.send(\"deleted Successfully\");\r\n\r\n    }catch(err){\r\n        res.status(400).send(\"error\")\r\n    }\r\n    \r\n})\r\n\r\napp.patch(\"/user\",async(req,res)=>{\r\n    const userId=req.body.userId;\r\n    const data=req.body;\r\n    try{\r\n        const users= await User.findByIdAndUpdate(userId,data,{\r\n            returnDocument:\"after\"\r\n        });\r\n        res.send(\"Data updated Successfully\");\r\n\r\n    }catch(err){\r\n        res.status(400).send(\"Something went wrong\");\r\n    }\r\n})\r\n\r\napp.post(\"/signup\",async (req,res)=>{\r\n    try{\r\nconst user =new User(req.body);\r\n\r\nawait user.save();\r\nres.send(\"data added successfully\");\r\n    }catch(err){\r\n        res.status(400).send(\"Error Saving data\"+err.message)\r\n    }\r\n\r\n\r\n})\r\n\r\nconnectDb()\r\n.then(()=>{\r\nconsole.log(\"Database Connection Established!\");\r\napp.listen(7777, () => {\r\n  console.log(\"Server is successfully listening on port 7777...\");\r\n});\r\n}).catch((err)=>{\r\n    console.error(\"Database Cannot be connected\");\r\n});\r\n\r\n"],"file":"app.dev.js"}