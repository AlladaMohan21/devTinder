{"version":3,"sources":["app.js"],"names":["express","require","connectDb","app","json","User","req","res","body","emailId","find","userEmail","length","status","send","user","get","userdata","regeneratorRuntime","async","_context2","prev","next","awrap","sent","t0","stop","userId","users","_context3","findById","_context4","findByIdAndDelete","patch","data","_context5","findByIdAndUpdate","returnDocument","post","_context6","save","message","then","console","log","listen","error"],"mappings":"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","file":"app.min.js","sourcesContent":["const express = require(\"express\");\r\nconst {connectDb}=require(\"./config/database\")\r\nconst User=require(\"./models/user\")\r\n\r\nconst app = express();\r\napp.use(express.json());\r\n\r\napp.get(\"/user\",async (req,res)=>{\r\n    try{\r\nconst userEmail=req.body.emailId;\r\n    const user= await User.find({emailId:userEmail});\r\n    if(user.length===0){\r\n        res.status(400).send(\"user data not found\");\r\n    }else{\r\n    res.send(user);\r\n    }\r\n    }catch(err){\r\n        res.status(400).send(\"user data not found\");\r\n    }\r\n    \r\n\r\n})\r\n\r\napp.get(\"/feed\",async (req,res)=>{\r\n    try{\r\n const users=req.body;\r\n    const userdata=await User.find({});\r\n    res.send(userdata);\r\n    }catch(err){\r\n        res.status(400).send(\"No users left\");\r\n    }\r\n   \r\n\r\n})\r\n\r\napp.get(\"/id\",async (req,res)=>{\r\n    try{\r\n        const userId = req.body.userId;\r\n        const users=await User.findById(userId);\r\n        res.send(users);\r\n    }catch(err){\r\n        res.status(400).send(\"user data not found\");\r\n    }\r\n})\r\n\r\napp.delete(\"/user\",async (req,res)=>{\r\n    try{\r\n        const user=req.body.userId;\r\n        const users=await User.findByIdAndDelete(user);\r\n        res.send(\"deleted Successfully\");\r\n\r\n    }catch(err){\r\n        res.status(400).send(\"error\")\r\n    }\r\n    \r\n})\r\n\r\napp.patch(\"/user\",async(req,res)=>{\r\n    const userId=req.body.userId;\r\n    const data=req.body;\r\n    try{\r\n        const users= await User.findByIdAndUpdate(userId,data,{\r\n            returnDocument:\"after\"\r\n        });\r\n        res.send(\"Data updated Successfully\");\r\n\r\n    }catch(err){\r\n        res.status(400).send(\"Something went wrong\");\r\n    }\r\n})\r\n\r\napp.post(\"/signup\",async (req,res)=>{\r\n    try{\r\nconst user =new User(req.body);\r\n\r\nawait user.save();\r\nres.send(\"data added successfully\");\r\n    }catch(err){\r\n        res.status(400).send(\"Error Saving data\"+err.message)\r\n    }\r\n\r\n\r\n})\r\n\r\nconnectDb()\r\n.then(()=>{\r\nconsole.log(\"Database Connection Established!\");\r\napp.listen(7777, () => {\r\n  console.log(\"Server is successfully listening on port 7777...\");\r\n});\r\n}).catch((err)=>{\r\n    console.error(\"Database Cannot be connected\");\r\n});\r\n\r\n"]}