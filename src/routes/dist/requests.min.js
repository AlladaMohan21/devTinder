"use strict";var express=require("express"),requestRouter=express.Router(),_require=require("../middlewares/auth"),userAuth=_require.userAuth,ConnectionRequest=require("../models/connectionRequest"),User=require("../models/user");requestRouter.post("/request/send/:status/:toUserId",userAuth,function(t,r){var s,n,u,a,o,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,s=t.user._id,n=t.params.toUserId,u=t.params.status,["ignored","interested"].includes(u)){e.next=7;break}return e.abrupt("return",r.status(400).json({message:"Invalid status type: "+u}));case 7:return e.next=9,regeneratorRuntime.awrap(User.findById(n));case 9:if(a=e.sent){e.next=12;break}return e.abrupt("return",r.status(404).json({message:"User not found!"}));case 12:return e.next=14,regeneratorRuntime.awrap(ConnectionRequest.findOne({$or:[{fromUserId:s,toUserId:n},{fromUserId:n,toUserId:s}]}));case 14:if(e.sent)return e.abrupt("return",r.status(400).send({message:"Connection Request Already Exists!!"}));e.next=17;break;case 17:return o=new ConnectionRequest({fromUserId:s,toUserId:n,status:u}),e.next=20,regeneratorRuntime.awrap(o.save());case 20:i=e.sent,r.json({message:t.user.firstName+" is "+u+" in "+a.firstName,data:i}),e.next=27;break;case 24:e.prev=24,e.t0=e.catch(0),r.status(400).send("ERROR: "+e.t0.message);case 27:case"end":return e.stop()}},null,null,[[0,24]])}),requestRouter.post("/request/review/:status/:requestId",userAuth,function(t,r){var s,n,u,a,o,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,s=t.user,n=t.params,u=n.status,a=n.requestId,["accepted","rejected"].includes(u)){e.next=6;break}return e.abrupt("return",r.status(400).json({messaage:"Status not allowed!"}));case 6:return e.next=8,regeneratorRuntime.awrap(ConnectionRequest.findOne({_id:a,toUserId:s._id,status:"interested"}));case 8:if(o=e.sent){e.next=11;break}return e.abrupt("return",r.status(404).json({message:"Connection request not found"}));case 11:return o.status=u,e.next=14,regeneratorRuntime.awrap(o.save());case 14:i=e.sent,r.json({message:"Connection request "+u,data:i}),e.next=21;break;case 18:e.prev=18,e.t0=e.catch(0),r.status(400).send("ERROR: "+e.t0.message);case 21:case"end":return e.stop()}},null,null,[[0,18]])}),module.exports=requestRouter;
//# sourceMappingURL=requests.min.js.map
