"use strict";var express=require("express"),authRouter=express.Router(),_require=require("../utils/validation"),validationDatabase=_require.validationDatabase,bcrypt=require("bcrypt"),User=require("../models/user");authRouter.post("/signup",function(r,t){var a,s,n,u,i,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return validationDatabase(r),a=r.body,s=a.firstName,n=a.lastName,u=a.emailId,i=a.password,e.next=4,regeneratorRuntime.awrap(User.findOne({emailId:u}));case 4:if(e.sent)return e.abrupt("return",t.status(400).send("Email already exists"));e.next=7;break;case 7:return e.next=9,regeneratorRuntime.awrap(bcrypt.hash(i,10));case 9:return o=e.sent,console.log(o),c=new User({firstName:s,lastName:n,password:o,emailId:u}),e.prev=12,e.next=15,regeneratorRuntime.awrap(c.save());case 15:runValidators=!0,t.send("User Added successfully!"),e.next=24;break;case 19:if(e.prev=19,e.t0=e.catch(12),11e3===e.t0.code)return e.abrupt("return",t.status(400).send("Email already exists"));e.next=23;break;case 23:t.status(400).send("Error saving user: "+e.t0.message);case 24:case"end":return e.stop()}},null,null,[[12,19]])}),authRouter.post("/login",function(r,t){var a,s,n,u,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return a=r.body,s=a.emailId,n=a.password,e.prev=1,e.next=4,regeneratorRuntime.awrap(User.findOne({emailId:s}));case 4:if(u=e.sent){e.next=7;break}throw new Error("Invalid Credentials");case 7:return e.next=9,regeneratorRuntime.awrap(u.validatePassword(n));case 9:if(e.sent)return e.next=13,regeneratorRuntime.awrap(u.getJWT());e.next=18;break;case 13:i=e.sent,t.cookie("token",i,{expires:new Date(Date.now()+288e5)}),t.send(u),e.next=19;break;case 18:throw new error("Invalid Credentials");case 19:e.next=24;break;case 21:e.prev=21,e.t0=e.catch(1),t.status(400).send("invalid Credentials "+e.t0.message);case 24:case"end":return e.stop()}},null,null,[[1,21]])}),authRouter.post("/logout",function(e,r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:try{r.cookie("token","",{expires:new Date(Date.now())}),r.status(200).send("Logout successful")}catch(e){r.status(400).send("logout failed")}case 1:case"end":return e.stop()}})}),module.exports=authRouter;
//# sourceMappingURL=auth.min.js.map
