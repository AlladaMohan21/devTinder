{"version":3,"sources":["connectionRequest.js"],"names":["mongoose","require","connectionRequestSchema","Schema","fromUserId","_fromUserId","type","Types","ObjectId","_defineProperty","ref","toUserId","required","String","status","values","timestamps","index","pre","next","this","equals","connectionRequest","ConnectionRequestModel","model","module","exports"],"mappings":"mKAAA,IAAMA,SAAWC,QAAQ,YAEnBC,wBAA0B,IAAIF,SAASG,OAC3C,CACEC,YAAUC,YAAA,CACRC,KAAMN,SAASG,OAAOI,MAAMC,SAL5BR,IAAAA,QAIQS,gBAAAJ,YAAA,MAGH,QAHGI,gBAAAJ,YAAA,YAFRH,GAEQG,aACRC,SAAMN,CACNU,KAAKV,SAAAG,OAAAI,MAAAC,SAFGE,IAAA,OAMVC,UAAU,GAERD,OAAK,CACLE,KAAQC,OAVZD,UAAA,EAYEE,KAAQ,CACFC,OADE,CAAA,UAAA,aAAA,WAAA,YAENH,QAAU,sCACJ,CAAAI,YAAA,IAWZd,wBAAwBe,MAAM,CAAEb,WAAY,EAAGO,SAAU,IAAzBP,wBAAFc,IAAA,OAAA,SAAAC,GAE9BjB,GAFyDkB,KAEjCF,WAAxBG,OAFyDD,KAELT,UAClD,MAAMW,IAAAA,MAAAA,+CAENH,MAMF,IAAMI,uBAAyB,IAAIvB,SAASwB,MAH1CL,oBANFjB,yBAcAuB,OAAOC,QAAUH","file":"connectionRequest.min.js","sourcesContent":["const mongoose = require(\"mongoose\");\r\n\r\nconst connectionRequestSchema = new mongoose.Schema(\r\n  {\r\n    fromUserId: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"User\", // refernce to the user collection\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    toUserId: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    status: {\r\n      type: String,\r\n      required: true,\r\n      enum: {\r\n        values: [\"ignored\", \"interested\", \"accepted\", \"rejected\"],\r\n        message: `{VALUE} is incorrect status type`,\r\n      },\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// ConnectionRequest.find({fromUserId: 273478465864786587, toUserId: 273478465864786587})\r\n\r\nconnectionRequestSchema.index({ fromUserId: 1, toUserId: 1 });\r\n\r\nconnectionRequestSchema.pre(\"save\", function (next) {\r\n  const connectionRequest = this;\r\n  // Check if the fromUserId is same as toUserId\r\n  if (connectionRequest.fromUserId.equals(connectionRequest.toUserId)) {\r\n    throw new Error(\"Cannot send connection request to yourself!\");\r\n  }\r\n  next();\r\n});\r\n\r\nconst ConnectionRequestModel = new mongoose.model(\r\n  \"ConnectionRequest\",\r\n  connectionRequestSchema\r\n);\r\n\r\nmodule.exports = ConnectionRequestModel;"]}