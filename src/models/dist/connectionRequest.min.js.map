{"version":3,"sources":["connectionRequest.js"],"names":["mongoose","require","Schema","fromUserId","connectionRequestSchema","Types","required","type","ObjectId","status","String","values","timestamps","index","toUserId","this","equals","Error","next","ConnectionRequestModel","model","module"],"mappings":"aAAA,IAAMA,SAASC,QAAQ,YAAjBD,wBAAiB,IAAvBA,SAAAE,OAAA,CAGIC,WAAW,CADTC,KAAAA,SAAAA,OAAuBC,MAAKL,SAC9BG,UAAW,GAEPG,SAAQ,CAHkCC,KAAAP,SAAAE,OAAAG,MAAAG,SAKrCF,UAAA,GALqCG,OAAA,CAUxCF,KAACG,OAAAJ,UAAA,EAEKA,KAAS,CACjBK,OAAM,CAAA,SAAA,aAAA,WAAA,YACVA,QAAM,mCAJC,CAQTC,YAAA,IAAAR,wBAlBFS,MAAA,CAAAV,WAAA,EAAAW,SAAA,IAqBAV,wBAAwBS,IAAAA,OAAM,WAAcC,GAAdC,KAAuBZ,WAAAa,OAAvBD,KAAuBD,UAArD,MAAA,IAAAG,MAAA,8CAOIC,SADC,IAAAC,uBAAA,IAAAnB,SAAAoB,MAKD,oBAJAF,yBAGJG,OAAMF,QAAAA","file":"connectionRequest.min.js","sourcesContent":["const mongoose=require(\"mongoose\");\r\n\r\nconst connectionRequestSchema=new mongoose.Schema({\r\n    fromUserId:{\r\n        type:mongoose.Schema.Types.ObjectId,\r\n        required:true,\r\n    },\r\n    toUserId:{\r\n        type:mongoose.Schema.Types.ObjectId,\r\n                required:true,\r\n\r\n    },\r\n    status:{\r\n        type:String,\r\n                required:true,\r\n        enum: {\r\n    values: [\"ignore\",\"interested\",\"accepted\",\"rejected\"], \r\n    message: \"{VALUE} is not a valid status\"\r\n  }\r\n    }\r\n},{\r\n    timestamps:true,\r\n});\r\nconnectionRequestSchema.index({fromUserId:1,toUserId:1});\r\nconnectionRequestSchema.pre(\"save\",function (){\r\n    const connectionRequest =this;\r\n    if(connectionRequest.fromUserId.equals(connectionRequest.toUserId)){\r\n        throw new Error(\"Cannot send Connection request to yourself\");\r\n    \r\n    }\r\n    next();\r\n})\r\n\r\nconst ConnectionRequestModel=new mongoose.model(\r\n    \"ConnectionRequest\",\r\n    connectionRequestSchema\r\n)\r\nmodule.exports=ConnectionRequestModel;"]}