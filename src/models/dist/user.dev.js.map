{"version":3,"sources":["user.js"],"names":["mongoose","require","userSchema","Schema","firstName","type","String","required","minLength","maxLength","lastName","emailId","lowercase","unique","trim","password","age","Number","min","gender","validate","value","includes","Error","photoUrl","about","skills","timestamps","User","model","module","exports"],"mappings":";;;;;;AAAC,IAAMA,QAAQ,GAACC,OAAO,CAAC,UAAD,CAAtB;;AAGD,IAAMC,UAAU,GAAG,IAAIF,QAAQ,CAACG,MAAb;AAEfC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAEC,MADG;AAETC,IAAAA,QAAQ,EAAE,IAFD;AAGTC,IAAAA,SAAS,EAAE,CAHF;AAITC,IAAAA,SAAS,EAAE;AAJF,GAFI;AAQfC,EAAAA,QAAQ,EAAE;AACRL,IAAAA,IAAI,EAAEC;AADE,GARK;AAWfK,EAAAA,OAAO,EAAE;AACPN,IAAAA,IAAI,EAAEC,MADC;AAEPM,IAAAA,SAAS,EAAE,IAFJ;AAGPL,IAAAA,QAAQ,EAAE,IAHH;AAIPM,IAAAA,MAAM,EAAE,IAJD;AAKPC,IAAAA,IAAI,EAAE;AALC,GAXM;AAkBfC,EAAAA,QAAQ,EAAE;AACRV,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GAlBK;AAsBfS,EAAAA,GAAG,EAAE;AACHX,IAAAA,IAAI,EAAEY,MADH;AAEHC,IAAAA,GAAG,EAAE;AAFF,GAtBU;AA0BfC,EAAAA,MAAM,EAAE;AACNd,IAAAA,IAAI,EAAEC,MADA;AAENc,IAAAA,QAFM,oBAEGC,KAFH,EAEU;AACd,UAAI,CAAC,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6BC,QAA7B,CAAsCD,KAAtC,CAAL,EAAmD;AACjD,cAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF;AANK,GA1BO;AAkCfC,EAAAA,QAAQ,EAAE;AACRnB,IAAAA,IAAI,EAAEC,MADE;AAER,eAAS;AAFD,GAlCK;AAsCfmB,EAAAA,KAAK,EAAE;AACLpB,IAAAA,IAAI,EAAEC,MADD;AAEL,eAAS;AAFJ,GAtCQ;AA0CfoB,EAAAA,MAAM,EAAE;AACNrB,IAAAA,IAAI,EAAE,CAACC,MAAD;AADA;AA1CO,qCA6CP;AACRD,EAAAA,IAAI,EAAEC;AADE,CA7CO,oCAgDR;AACPD,EAAAA,IAAI,EAAEC;AADC,CAhDQ,qCAmDP;AACRD,EAAAA,IAAI,EAAEC;AADE,CAnDO,gCAsDZ;AACHD,EAAAA,IAAI,EAAEY;AADH,CAtDY,mCAyDT;AACNZ,EAAAA,IAAI,EAAEC;AADA,CAzDS,UA4DjB;AACEqB,EAAAA,UAAU,EAAE;AADd,CA5DiB,CAAnB;AAkEC,IAAMC,IAAI,GAAE5B,QAAQ,CAAC6B,KAAT,CAAe,MAAf,EAAsB3B,UAAtB,CAAZ;AAEA4B,MAAM,CAACC,OAAP,GAAeH,IAAf","sourcesContent":[" const mongoose=require(\"mongoose\");\r\n\r\n \r\nconst userSchema = new mongoose.Schema(\r\n  {\r\n    firstName: {\r\n      type: String,\r\n      required: true,\r\n      minLength: 4,\r\n      maxLength: 50,\r\n    },\r\n    lastName: {\r\n      type: String,\r\n    },\r\n    emailId: {\r\n      type: String,\r\n      lowercase: true,\r\n      required: true,\r\n      unique: true,\r\n      trim: true,\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    age: {\r\n      type: Number,\r\n      min: 18,\r\n    },\r\n    gender: {\r\n      type: String,\r\n      validate(value) {\r\n        if (![\"male\", \"female\", \"others\"].includes(value)) {\r\n          throw new Error(\"Gender data is not valid\");\r\n        }\r\n      },\r\n    },\r\n    photoUrl: {\r\n      type: String,\r\n      default: \"https://geographyandyou.com/images/user-profile.png\",\r\n    },\r\n    about: {\r\n      type: String,\r\n      default: \"This is a default about of the user!\",\r\n    },\r\n    skills: {\r\n      type: [String],\r\n    },\r\n  lastName: {\r\n    type: String,\r\n  },\r\n  emailId: {\r\n    type: String,\r\n  },\r\n  password: {\r\n    type: String,\r\n  },\r\n  age: {\r\n    type: Number,\r\n  },\r\n  gender: {\r\n    type: String,\r\n  },\r\n},{\r\n    timestamps: true,\r\n  })\r\n  \r\n\r\n\r\n const User= mongoose.model(\"user\",userSchema);\r\n\r\n module.exports=User;"],"file":"user.dev.js"}