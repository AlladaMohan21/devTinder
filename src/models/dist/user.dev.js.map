{"version":3,"sources":["user.js"],"names":["mongoose","require","validator","userSchema","Schema","firstName","type","String","required","minLength","maxLength","trim","lastName","emailId","unique","lowercase","validate","value","isEmail","Error","password","minlength","isStrongPassword","age","Number","min","gender","includes","photoUrl","isURL","about","maxlength","skills","timestamps","User","model","module","exports"],"mappings":";;AAAC,IAAMA,QAAQ,GAACC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMC,SAAS,GAACD,OAAO,CAAC,WAAD,CAAvB;;AAGD,IAAME,UAAU,GAAG,IAAIH,QAAQ,CAACI,MAAb,CACjB;AACEC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAEC,MADG;AAETC,IAAAA,QAAQ,EAAE,IAFD;AAGTC,IAAAA,SAAS,EAAE,CAHF;AAITC,IAAAA,SAAS,EAAE,EAJF;AAKTC,IAAAA,IAAI,EAAC;AALI,GADb;AAQEC,EAAAA,QAAQ,EAAE;AACRN,IAAAA,IAAI,EAAEC,MADE;AAERI,IAAAA,IAAI,EAAC,IAFG;AAGRH,IAAAA,QAAQ,EAAC;AAHD,GARZ;AAaEK,EAAAA,OAAO,EAAE;AACLP,IAAAA,IAAI,EAAEC,MADD;AAETC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,mBAAP,CAFD;AAGTM,IAAAA,MAAM,EAAE,IAHC;AAITC,IAAAA,SAAS,EAAE,IAJF;AAKTC,IAAAA,QALS,oBAKAC,KALA,EAKM;AACX,UAAG,CAACf,SAAS,CAACgB,OAAV,CAAkBD,KAAlB,CAAJ,EAA6B;AACzB,cAAM,IAAIE,KAAJ,CAAU,kBAAgBF,KAA1B,CAAN;AACH;AACJ;AATQ,GAbX;AAwBEG,EAAAA,QAAQ,EAAE;AACRd,IAAAA,IAAI,EAAEC,MADE;AAEVC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,sBAAP,CAFA;AAGVa,IAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,wCAAJ,CAHD;AAIVL,IAAAA,QAJU,oBAIDC,KAJC,EAIK;AACX,UAAG,CAACf,SAAS,CAACoB,gBAAV,CAA2BL,KAA3B,CAAJ,EAAsC;AAClC,cAAM,IAAIE,KAAJ,CAAU,4BAA0BF,KAApC,CAAN;AACH;AACJ;AARS,GAxBZ;AAkCEM,EAAAA,GAAG,EAAE;AACHjB,IAAAA,IAAI,EAAEkB,MADH;AAEHC,IAAAA,GAAG,EAAE;AAFF,GAlCP;AAsCEC,EAAAA,MAAM,EAAE;AACNpB,IAAAA,IAAI,EAAEC,MADA;AAENS,IAAAA,QAFM,oBAEGC,KAFH,EAEU;AACd,UAAI,CAAC,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6BU,QAA7B,CAAsCV,KAAtC,CAAL,EAAmD;AACjD,cAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF;AANK,GAtCV;AA8CES,EAAAA,QAAQ,EAAE;AACRtB,IAAAA,IAAI,EAAEC,MADE;AAER,eAAS,qDAFD;AAGRS,IAAAA,QAHQ,oBAGCC,KAHD,EAGO;AACb,UAAG,CAACf,SAAS,CAAC2B,KAAV,CAAgBZ,KAAhB,CAAJ,EAA2B;AACvB,cAAM,IAAIE,KAAJ,CAAU,gBAAcF,KAAxB,CAAN;AACH;AACF;AAPO,GA9CZ;AAuDEa,EAAAA,KAAK,EAAE;AACLxB,IAAAA,IAAI,EAAEC,MADD;AAEL,eAAS,sCAFJ;AAGLwB,IAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,4CAAN;AAHN,GAvDT;AA4DEC,EAAAA,MAAM,EAAE;AACN1B,IAAAA,IAAI,EAAE,CAACC,MAAD;AADA;AA5DV,CADiB,EAgEjB;AACE0B,EAAAA,UAAU,EAAE;AADd,CAhEiB,CAAnB;AAsEC,IAAMC,IAAI,GAAElC,QAAQ,CAACmC,KAAT,CAAe,MAAf,EAAsBhC,UAAtB,CAAZ;AAEAiC,MAAM,CAACC,OAAP,GAAeH,IAAf","sourcesContent":[" const mongoose=require(\"mongoose\");\r\n const validator=require(\"validator\");\r\n\r\n \r\nconst userSchema = new mongoose.Schema(\r\n  {\r\n    firstName: {\r\n      type: String,\r\n      required: true,\r\n      minLength: 4,\r\n      maxLength: 50,\r\n      trim:true\r\n    },\r\n    lastName: {\r\n      type: String,\r\n      trim:true,\r\n      required:true\r\n    },\r\n    emailId: {\r\n        type: String,\r\n    required: [true, \"Email is required\"],\r\n    unique: true,\r\n    lowercase: true,\r\n    validate(value){\r\n        if(!validator.isEmail(value)){\r\n            throw new Error(\"Invalid email\"+value);\r\n        }\r\n    }\r\n    },\r\n    password: {\r\n      type: String,\r\n    required: [true, \"Password is required\"],\r\n    minlength: [6, \"Password must be at least 6 characters\"],\r\n    validate(value){\r\n        if(!validator.isStrongPassword(value)){\r\n            throw new Error(\"Your password is weak..\"+value);\r\n        }\r\n    }\r\n    },\r\n    age: {\r\n      type: Number,\r\n      min: 18,\r\n    },\r\n    gender: {\r\n      type: String,\r\n      validate(value) {\r\n        if (![\"male\", \"female\", \"others\"].includes(value)) {\r\n          throw new Error(\"Gender data is not valid\");\r\n        }\r\n      },\r\n    },\r\n    photoUrl: {\r\n      type: String,\r\n      default: \"https://geographyandyou.com/images/user-profile.png\",\r\n      validate(value){\r\n        if(!validator.isURL(value)){\r\n            throw new Error(\"Invalid url\"+value);\r\n        }\r\n      }\r\n    },\r\n    about: {\r\n      type: String,\r\n      default: \"This is a default about of the user!\",\r\n      maxlength: [200, \"About section cannot exceed 200 characters\"]\r\n    },\r\n    skills: {\r\n      type: [String],\r\n    }\r\n},{\r\n    timestamps: true,\r\n  })\r\n  \r\n\r\n\r\n const User= mongoose.model(\"user\",userSchema);\r\n\r\n module.exports=User;"],"file":"user.dev.js"}