{"version":3,"sources":["connectionRequest.js"],"names":["mongoose","require","connectionRequestSchema","Schema","fromUserId","type","Types","ObjectId","required","toUserId","status","String","values","message","timestamps","index","pre","connectionRequest","equals","Error","next","ConnectionRequestModel","model","module","exports"],"mappings":";;AAAA,IAAMA,QAAQ,GAACC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMC,uBAAuB,GAAC,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AAC9CC,EAAAA,UAAU,EAAC;AACPC,IAAAA,IAAI,EAACL,QAAQ,CAACG,MAAT,CAAgBG,KAAhB,CAAsBC,QADpB;AAEPC,IAAAA,QAAQ,EAAC;AAFF,GADmC;AAK9CC,EAAAA,QAAQ,EAAC;AACLJ,IAAAA,IAAI,EAACL,QAAQ,CAACG,MAAT,CAAgBG,KAAhB,CAAsBC,QADtB;AAEGC,IAAAA,QAAQ,EAAC;AAFZ,GALqC;AAU9CE,EAAAA,MAAM,EAAC;AACHL,IAAAA,IAAI,EAACM,MADF;AAEKH,IAAAA,QAAQ,EAAC,IAFd;AAGH,YAAM;AACVI,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAU,YAAV,EAAuB,UAAvB,EAAkC,UAAlC,CADE;AAEVC,MAAAA,OAAO,EAAE;AAFC;AAHH;AAVuC,CAApB,EAkB5B;AACEC,EAAAA,UAAU,EAAC;AADb,CAlB4B,CAA9B;AAqBAZ,uBAAuB,CAACa,KAAxB,CAA8B;AAACX,EAAAA,UAAU,EAAC,CAAZ;AAAcK,EAAAA,QAAQ,EAAC;AAAvB,CAA9B;AACAP,uBAAuB,CAACc,GAAxB,CAA4B,MAA5B,EAAmC,YAAW;AAC1C,MAAMC,iBAAiB,GAAE,IAAzB;;AACA,MAAGA,iBAAiB,CAACb,UAAlB,CAA6Bc,MAA7B,CAAoCD,iBAAiB,CAACR,QAAtD,CAAH,EAAmE;AAC/D,UAAM,IAAIU,KAAJ,CAAU,4CAAV,CAAN;AAEH;;AACDC,EAAAA,IAAI;AACP,CAPD;AASA,IAAMC,sBAAsB,GAAC,IAAIrB,QAAQ,CAACsB,KAAb,CACzB,mBADyB,EAEzBpB,uBAFyB,CAA7B;AAIAqB,MAAM,CAACC,OAAP,GAAeH,sBAAf","sourcesContent":["const mongoose=require(\"mongoose\");\r\n\r\nconst connectionRequestSchema=new mongoose.Schema({\r\n    fromUserId:{\r\n        type:mongoose.Schema.Types.ObjectId,\r\n        required:true,\r\n    },\r\n    toUserId:{\r\n        type:mongoose.Schema.Types.ObjectId,\r\n                required:true,\r\n\r\n    },\r\n    status:{\r\n        type:String,\r\n                required:true,\r\n        enum: {\r\n    values: [\"ignore\",\"interested\",\"accepted\",\"rejected\"], \r\n    message: \"{VALUE} is not a valid status\"\r\n  }\r\n    }\r\n},{\r\n    timestamps:true,\r\n});\r\nconnectionRequestSchema.index({fromUserId:1,toUserId:1});\r\nconnectionRequestSchema.pre(\"save\",function (){\r\n    const connectionRequest =this;\r\n    if(connectionRequest.fromUserId.equals(connectionRequest.toUserId)){\r\n        throw new Error(\"Cannot send Connection request to yourself\");\r\n    \r\n    }\r\n    next();\r\n})\r\n\r\nconst ConnectionRequestModel=new mongoose.model(\r\n    \"ConnectionRequest\",\r\n    connectionRequestSchema\r\n)\r\nmodule.exports=ConnectionRequestModel;"],"file":"connectionRequest.dev.js"}