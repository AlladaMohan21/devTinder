{"version":3,"sources":["user.js"],"names":["mongoose","require","validator","Schema","userSchema","firstName","String","type","required","minLength","maxLength","lastName","trim","emailId","unique","lowercase","value","validate","isEmail","password","minlength","isStrongPassword","age","Number","gender","includes","Error","photoUrl","isURL","about","maxlength","skills","timestamps","User","model","module","exports"],"mappings":"aAAC,IAAMA,SAASC,QAAQ,YACjBC,UAAUD,QAAQ,aAAlBC,WAAUD,IAAOD,SAACG,OAIvB,CADIC,UAAU,CAEZC,KAASC,OACPC,UADS,EAETC,UAAU,EACVC,UAHS,GAITC,MAAAA,GALJC,SAAA,CAQEA,KAAUL,OACRC,MAAMD,EACNM,UAFQ,GARZC,QAAA,CAaEA,KAASP,OACLC,SAAMD,EAAAA,EADD,qBAETE,QAAQ,EACRM,WAAQ,EACRC,SAjBF,SAiBWC,GACTC,IALSf,UAAAgB,QAAAF,GAMDd,MAAAA,IAAUgB,MAAV,gBAAyBF,KAnBnCG,SAAA,CAwBEA,KAAUb,OACRC,SAAMD,EAAAA,EADE,wBAEVE,UAAW,CAAA,EAAD,0CACVY,SA3BF,SA2BWJ,GACTC,IAJUf,UAAAmB,iBAIKL,GACPd,MAAAA,IAAUmB,MAAAA,0BAAwBL,KA7B5CM,IAAA,CAkCKf,KAAEgB,OACHhB,IAAMgB,IAnCVC,OAAA,CAsCEA,KAAQlB,OACNC,SAvCJ,SAuCUD,GACNW,IAFM,CAAA,OAAA,SAEGD,UAAOS,SAAAT,GACV,MAAE,IAAQU,MAAA,8BAzCpBC,SAAA,CA8CEA,KAAUrB,OACRC,QAAMD,sDACNW,SAhDJ,SAgDaD,GACTC,IAHQf,UAAA0B,MAAAZ,GAIFd,MAAAA,IAAU0B,MAAMZ,cAAOA,KAlDjCa,MAAA,CAuDEA,KAAOvB,OACLC,QAAMD,uCACNwB,UAAS,CAAA,IAAA,+CAzDbC,OAAA,CA4DEA,KAAQ,CAAAzB,UAAA,CAGV0B,YAAA,IAMKC,KAAMjC,SAASkC,MAAM,OAAO9B,YAElC+B,OAAOC,QAAQH","file":"user.min.js","sourcesContent":[" const mongoose=require(\"mongoose\");\r\n const validator=require(\"validator\");\r\n\r\n \r\nconst userSchema = new mongoose.Schema(\r\n  {\r\n    firstName: {\r\n      type: String,\r\n      required: true,\r\n      minLength: 4,\r\n      maxLength: 50,\r\n      trim:true\r\n    },\r\n    lastName: {\r\n      type: String,\r\n      trim:true,\r\n      required:true\r\n    },\r\n    emailId: {\r\n        type: String,\r\n    required: [true, \"Email is required\"],\r\n    unique: true,\r\n    lowercase: true,\r\n    validate(value){\r\n        if(!validator.isEmail(value)){\r\n            throw new Error(\"Invalid email\"+value);\r\n        }\r\n    }\r\n    },\r\n    password: {\r\n      type: String,\r\n    required: [true, \"Password is required\"],\r\n    minlength: [6, \"Password must be at least 6 characters\"],\r\n    validate(value){\r\n        if(!validator.isStrongPassword(value)){\r\n            throw new Error(\"Your password is weak..\"+value);\r\n        }\r\n    }\r\n    },\r\n    age: {\r\n      type: Number,\r\n      min: 18,\r\n    },\r\n    gender: {\r\n      type: String,\r\n      validate(value) {\r\n        if (![\"male\", \"female\", \"others\"].includes(value)) {\r\n          throw new Error(\"Gender data is not valid\");\r\n        }\r\n      },\r\n    },\r\n    photoUrl: {\r\n      type: String,\r\n      default: \"https://geographyandyou.com/images/user-profile.png\",\r\n      validate(value){\r\n        if(!validator.isURL(value)){\r\n            throw new Error(\"Invalid url\"+value);\r\n        }\r\n      }\r\n    },\r\n    about: {\r\n      type: String,\r\n      default: \"This is a default about of the user!\",\r\n      maxlength: [200, \"About section cannot exceed 200 characters\"]\r\n    },\r\n    skills: {\r\n      type: [String],\r\n    }\r\n},{\r\n    timestamps: true,\r\n  })\r\n  \r\n\r\n\r\n const User= mongoose.model(\"user\",userSchema);\r\n\r\n module.exports=User;"]}